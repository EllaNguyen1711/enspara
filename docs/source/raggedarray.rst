RaggedArrays
========

The RaggedArray is a data type implemented in `enspara` for efficiently holding
n-dimensional data that has one dimension "ragged" in memory. By "ragged" we
mean that the length of each row (axis 1) may differ. This situation arises
very frequently when working with large molecular dyanmics datasets, such as
those that are generated by Folding@Home.

Creating RaggedArrays
--------------------------------

Creating a RaggedArray can be done in two ways.

1. Given a list of lists/arrays:

.. code-block:: python

	l = [[1, 1, 4],
	     [2, 8, 7, 3]]

    a = ra.RaggedArray(l)

2. Given an array with n-1 dimensions (i.e. concatenated end-to-end) and a
list of row lengths:

.. code-block:: python

    a = ra.RaggedArray(
	    array=np.array(range(60)),
	    lengths=[10, 20, 30])


Indexing RaggedArrays
--------------------------------

Indexing a RaggedArray, for the most part, "just works" as it does in `numpy`.
For example,

.. code-block:: python

    a = ra.RaggedArray(
	    array=np.array(range(10)),
	    lengths=[2, 3, 5])

	print(a[1])

.. code-block::

	[3, 4, 5]

.. code-block:: python

	print(a[2, 1:3])

.. code-block::

	[7, 8, 9]

There are a few differences, however. In an aligned numpy array, only the use
of fancy indexing causes numpy to make a copy. In the case of RaggedArrays,
the use of slices also causes the RaggedArray to make a copy.


Modifying RaggedArrays
--------------------------------

RaggedArray I/O
--------------------------------
